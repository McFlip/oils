version: '3.2' # specify docker-compose version

# Define the services/containers to be run
services:
  react: # name of the first service
    container_name: react-app
    build: react-client # specify the directory of the Dockerfile
    ports:
      - "8080:8080" # specify port forewarding
    volumes:
      - './react-client/src:/usr/src/app/src'
      - './react-client/style:/usr/src/app/style'
    environment:
      - NODE_ENV=development
    links:
      - "express"
    depends_on:
      - "express"
    command: ["npm", "start"]     # Serve the app

  express: #name of the second service
    container_name: express-api
    build: express-server # specify the directory of the Dockerfile
    ports:
      - "3000:3000" #specify ports forewarding
    volumes:
      - ./express-server/server:/usr/src/app/server # bind src code to container
    links:
      - "database" # link this service to the database service
    depends_on:
      - "database"
    # Serve the app; wait for db connection
    command: ["bash", "/usr/src/app/wait-for-it.sh", "database:27017", "--", "npm", "start"]

  database: # name of the third service
    container_name: mongo-db
    image: mongo # specify image to build container from
    ports:
      - "27017:27017" # specify port forewarding
    volumes:
      - type: volume
        source: dbvol
        target: /data/db
  adminmongo:
    container_name: adminmongo
    image: mrvautin/adminmongo
    ports:
      - "1234:1234"
    links:
      - "database"
    depends_on:
      - "database"
    environment:
      - CONN_NAME="mean-docker"
      - DB_HOST="database"
      - DB_NAME="mean-docker"
volumes:
  dbvol:
